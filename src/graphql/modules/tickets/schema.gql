type Ticket {
  _id: ID!
  symbol: String!
  name: String
  quantity: Float!
  averagePrice: Float!
  grade: Int!
}

input TicketInput {
  symbol: String!
  name: String!
  quantity: Float!
  averagePrice: Float!
  grade: Int!
}

type Query {
  tickets: [Ticket!]
  getTicketsByWallet(walletID: ID!): [Ticket]
}

type Mutation {
  createTicket(walletID: ID!, input: TicketInput!): Ticket!
  updateTicket(_id: ID!, input: TicketInput!): Ticket
  deleteTicket(_id: ID!, walletID: ID!): Boolean!
}
